%% vim: ft=acrylic

Opcodes:
  00 BREAK
  01 ADD (args: RG1 RG2) : RG1 += RG2
  02 SUB (args: RG1 RG2) : RG1 -= RG2
  03 DIV (args: RG1 RG2) : RG1 /= RG2
  04 MUL (args: RG1 RG2) : RG1 *= RG2
  05 PORT_SEND (args: PORT DATA) : sends data to the specified port %% TODO: how to specify if i want an u8, u16 or u32? ports would be like memory then but with some kind of hook on load
  06 PORT_RECV (args: PORT) : receives data from the specified port

Registers (all 32-bit):
  00 INSTRUCTION POINTER
  01-03 DATA REGISTERS
  04 OPERATION OUTPUT (e.g. carrier bit)

Ports:
  Group "SYSTEM" (00-128)
    00-01 ERRNO
    02-05 MAX_MEMORY (read and write the amount of memory free for the system. Default's 64000, or 64kb, and the max memory that can be requested depends on the implementation)

Loading ROMs:
  At the beginning, the first 64kb are read into memory, and the instruction pointer is set to 0x100 (256). Very similar to Uxn.
